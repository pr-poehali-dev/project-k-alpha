import { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { ScrollArea } from '@/components/ui/scroll-area';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface Server {
  id: string;
  name: string;
  version: string;
  status: 'online' | 'offline' | 'starting';
  players: number;
  maxPlayers: number;
  plan: string;
  ip: string;
  build: string;
}

interface Player {
  name: string;
  ping: number;
  playtime: string;
}

const ServerControl = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const server = location.state?.server as Server;

  const [serverStatus, setServerStatus] = useState(server?.status || 'online');
  const [consoleCommand, setConsoleCommand] = useState('');
  const [consoleLog, setConsoleLog] = useState<string[]>([
    '[Server] Starting Minecraft server...',
    '[Server] Loading world...',
    '[Server] Server started successfully!',
    '[Server] Ready for players'
  ]);

  const [installedPlugins, setInstalledPlugins] = useState([
    { name: 'EssentialsX', version: '2.20.1', enabled: true, description: '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏' },
    { name: 'WorldEdit', version: '7.2.15', enabled: true, description: '–†–µ–¥–∞–∫—Ç–æ—Ä –º–∏—Ä–∞' },
    { name: 'LuckPerms', version: '5.4.102', enabled: true, description: '–°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤' }
  ]);

  const [onlinePlayers] = useState<Player[]>([
    { name: 'Steve', ping: 45, playtime: '2—á 15–º' },
    { name: 'Alex', ping: 32, playtime: '1—á 30–º' },
    { name: 'Herobrine', ping: 67, playtime: '45–º' }
  ]);

  if (!server) {
    navigate('/');
    return null;
  }

  const toggleServer = () => {
    if (serverStatus === 'online') {
      setServerStatus('offline');
      toast.success('–°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } else {
      setServerStatus('starting');
      toast.success('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
      setTimeout(() => {
        setServerStatus('online');
        toast.success('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
      }, 2000);
    }
  };

  const togglePlugin = (pluginName: string) => {
    setInstalledPlugins(prev => 
      prev.map(plugin => 
        plugin.name === pluginName 
          ? { ...plugin, enabled: !plugin.enabled }
          : plugin
      )
    );
    const plugin = installedPlugins.find(p => p.name === pluginName);
    if (plugin) {
      toast.success(`–ü–ª–∞–≥–∏–Ω ${pluginName} ${plugin.enabled ? '–≤—ã–∫–ª—é—á–µ–Ω' : '–≤–∫–ª—é—á–µ–Ω'}`);
    }
  };

  const executeCommand = () => {
    if (!consoleCommand.trim()) return;
    
    const newLog = [...consoleLog];
    newLog.push(`> ${consoleCommand}`);
    
    if (consoleCommand === 'help') {
      newLog.push('[Server] Available commands: stop, list, say, tp, gamemode');
    } else if (consoleCommand === 'list') {
      newLog.push(`[Server] Online players: ${onlinePlayers.length}/${server.maxPlayers}`);
    } else if (consoleCommand.startsWith('say ')) {
      const message = consoleCommand.substring(4);
      newLog.push(`[Server] Broadcast: ${message}`);
    } else {
      newLog.push('[Server] Command executed');
    }
    
    setConsoleLog(newLog);
    setConsoleCommand('');
  };

  const copyIpAddress = () => {
    navigator.clipboard.writeText(server.ip);
    toast.success('IP –∞–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
  };

  const getStatusColor = (status: Server['status']) => {
    switch (status) {
      case 'online': return 'bg-green-500';
      case 'offline': return 'bg-red-500';
      case 'starting': return 'bg-yellow-500';
    }
  };

  const getStatusText = (status: Server['status']) => {
    switch (status) {
      case 'online': return '–û–Ω–ª–∞–π–Ω';
      case 'offline': return '–û—Ñ—Ñ–ª–∞–π–Ω';
      case 'starting': return '–ó–∞–ø—É—Å–∫...';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-background to-muted/20 p-4 md:p-8">
      <div className="max-w-7xl mx-auto">
        <div className="mb-6">
          <Button 
            variant="outline" 
            onClick={() => navigate('/')}
            className="pixel-corners mb-4"
          >
            <Icon name="ArrowLeft" className="mr-2 h-4 w-4" />
            –ù–∞–∑–∞–¥ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º
          </Button>

          <Card className="pixel-corners minecraft-shadow">
            <CardHeader>
              <div className="flex items-start justify-between">
                <div>
                  <div className="flex items-center gap-3 mb-2">
                    <CardTitle className="font-pixel text-2xl">{server.name}</CardTitle>
                    <Badge className={`${getStatusColor(serverStatus)} pixel-corners`}>
                      {getStatusText(serverStatus)}
                    </Badge>
                  </div>
                  <CardDescription>
                    –í–µ—Ä—Å–∏—è {server.version} ‚Ä¢ {server.build} ‚Ä¢ {server.plan}
                  </CardDescription>
                </div>
                <Button
                  size="lg"
                  variant={serverStatus === 'online' ? 'destructive' : 'default'}
                  className="pixel-corners minecraft-shadow"
                  onClick={toggleServer}
                  disabled={serverStatus === 'starting'}
                >
                  <Icon name={serverStatus === 'online' ? 'PowerOff' : 'Power'} className="mr-2 h-5 w-5" />
                  {serverStatus === 'online' ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å'}
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="bg-muted p-4 rounded-lg pixel-corners">
                  <p className="text-xs text-muted-foreground mb-1">IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞:</p>
                  <div className="flex items-center justify-between">
                    <p className="font-mono font-semibold">{server.ip}</p>
                    <Button 
                      variant="ghost" 
                      size="sm"
                      onClick={copyIpAddress}
                    >
                      <Icon name="Copy" className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
                <div className="bg-muted p-4 rounded-lg pixel-corners">
                  <p className="text-xs text-muted-foreground mb-1">–ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω:</p>
                  <p className="font-pixel text-xl">{server.players}/{server.maxPlayers}</p>
                </div>
                <div className="bg-muted p-4 rounded-lg pixel-corners">
                  <p className="text-xs text-muted-foreground mb-1">–ù–∞–≥—Ä—É–∑–∫–∞:</p>
                  <p className="font-pixel text-xl text-green-500">24% CPU</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="overview" className="space-y-4">
          <TabsList className="grid w-full grid-cols-5">
            <TabsTrigger value="overview" className="font-pixel text-xs md:text-sm">
              <Icon name="LayoutDashboard" className="mr-2 h-4 w-4" />
              –û–±–∑–æ—Ä
            </TabsTrigger>
            <TabsTrigger value="players" className="font-pixel text-xs md:text-sm">
              <Icon name="Users" className="mr-2 h-4 w-4" />
              –ò–≥—Ä–æ–∫–∏
            </TabsTrigger>
            <TabsTrigger value="plugins" className="font-pixel text-xs md:text-sm">
              <Icon name="Puzzle" className="mr-2 h-4 w-4" />
              –ü–ª–∞–≥–∏–Ω—ã
            </TabsTrigger>
            <TabsTrigger value="console" className="font-pixel text-xs md:text-sm">
              <Icon name="Terminal" className="mr-2 h-4 w-4" />
              –ö–æ–Ω—Å–æ–ª—å
            </TabsTrigger>
            {server.plan === '–í–°–Å –∏–ª–∏ –ù–ò–ß–ï–ì–û' && (
              <TabsTrigger value="custom" className="font-pixel text-xs md:text-sm">
                <Icon name="Sparkles" className="mr-2 h-4 w-4" />
                VIP
              </TabsTrigger>
            )}
          </TabsList>

          <TabsContent value="overview">
            <div className="grid gap-4">
              <Card className="pixel-corners minecraft-shadow">
                <CardHeader>
                  <CardTitle className="font-pixel">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="space-y-3">
                      <div>
                        <p className="text-sm text-muted-foreground mb-2">–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä</p>
                        <div className="h-3 bg-muted rounded-full overflow-hidden">
                          <div className="h-full bg-primary" style={{ width: '24%' }}></div>
                        </div>
                        <p className="text-xs text-muted-foreground mt-1">24%</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground mb-2">–ü–∞–º—è—Ç—å (RAM)</p>
                        <div className="h-3 bg-muted rounded-full overflow-hidden">
                          <div className="h-full bg-primary" style={{ width: '68%' }}></div>
                        </div>
                        <p className="text-xs text-muted-foreground mt-1">2.7 GB / 4 GB</p>
                      </div>
                    </div>
                    <div className="space-y-3">
                      <div>
                        <p className="text-sm text-muted-foreground mb-2">–î–∏—Å–∫</p>
                        <div className="h-3 bg-muted rounded-full overflow-hidden">
                          <div className="h-full bg-primary" style={{ width: '45%' }}></div>
                        </div>
                        <p className="text-xs text-muted-foreground mt-1">11.2 GB / 25 GB</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground mb-2">–°–µ—Ç—å</p>
                        <div className="flex items-center gap-2">
                          <Icon name="ArrowDown" className="h-3 w-3 text-green-500" />
                          <span className="text-xs">12.5 MB/s</span>
                          <Icon name="ArrowUp" className="h-3 w-3 text-blue-500" />
                          <span className="text-xs">8.2 MB/s</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="pixel-corners minecraft-shadow">
                <CardHeader>
                  <CardTitle className="font-pixel">‚öôÔ∏è –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                    <Button variant="outline" className="pixel-corners h-20 flex-col">
                      <Icon name="RefreshCw" className="h-6 w-6 mb-2" />
                      <span className="text-xs">–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫</span>
                    </Button>
                    <Button variant="outline" className="pixel-corners h-20 flex-col">
                      <Icon name="Download" className="h-6 w-6 mb-2" />
                      <span className="text-xs">–ë—ç–∫–∞–ø</span>
                    </Button>
                    <Button variant="outline" className="pixel-corners h-20 flex-col">
                      <Icon name="Settings" className="h-6 w-6 mb-2" />
                      <span className="text-xs">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                    </Button>
                    <Button variant="outline" className="pixel-corners h-20 flex-col">
                      <Icon name="Folder" className="h-6 w-6 mb-2" />
                      <span className="text-xs">–§–∞–π–ª—ã</span>
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="players">
            <Card className="pixel-corners minecraft-shadow">
              <CardHeader>
                <CardTitle className="font-pixel">üë• –ò–≥—Ä–æ–∫–∏ –æ–Ω–ª–∞–π–Ω ({onlinePlayers.length})</CardTitle>
                <CardDescription>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏, –¥–æ–Ω–∞—Ç–∞–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏</CardDescription>
              </CardHeader>
              <CardContent>
                <ScrollArea className="h-[500px]">
                  <div className="space-y-3">
                    {onlinePlayers.map((player, index) => (
                      <Card key={index} className="pixel-corners bg-muted/30">
                        <CardContent className="p-4">
                          <div className="flex items-center justify-between flex-wrap gap-3">
                            <div className="flex items-center gap-3">
                              <div className="w-10 h-10 bg-primary/20 rounded pixel-corners flex items-center justify-center">
                                <Icon name="User" className="h-5 w-5" />
                              </div>
                              <div>
                                <p className="font-pixel text-sm">{player.name}</p>
                                <p className="text-xs text-muted-foreground">
                                  –ü–∏–Ω–≥: {player.ping}–º—Å ‚Ä¢ –í—Ä–µ–º—è: {player.playtime}
                                </p>
                              </div>
                            </div>
                            <div className="flex gap-2 flex-wrap">
                              <Button 
                                size="sm" 
                                variant="outline" 
                                className="pixel-corners text-xs"
                                onClick={() => toast.success(`–î–æ–Ω–∞—Ç –≤—ã–¥–∞–Ω –∏–≥—Ä–æ–∫—É ${player.name}`)}
                              >
                                <Icon name="Gift" className="h-3 w-3 mr-1" />
                                –í—ã–¥–∞—Ç—å –¥–æ–Ω–∞—Ç
                              </Button>
                              <Button 
                                size="sm" 
                                variant="outline" 
                                className="pixel-corners text-xs"
                                onClick={() => toast.success(`OP –≤—ã–¥–∞–Ω –∏–≥—Ä–æ–∫—É ${player.name}`)}
                              >
                                <Icon name="Crown" className="h-3 w-3 mr-1" />
                                –í—ã–¥–∞—Ç—å OP
                              </Button>
                              <Button 
                                size="sm" 
                                variant="destructive" 
                                className="pixel-corners text-xs"
                                onClick={() => toast.success(`–ò–≥—Ä–æ–∫ ${player.name} –∑–∞–±–∞–Ω–µ–Ω`)}
                              >
                                <Icon name="Ban" className="h-3 w-3 mr-1" />
                                –ë–∞–Ω
                              </Button>
                              <Button 
                                size="sm" 
                                variant="outline" 
                                className="pixel-corners text-xs"
                                onClick={() => toast.success(`–ò–≥—Ä–æ–∫ ${player.name} —Ä–∞–∑–±–∞–Ω–µ–Ω`)}
                              >
                                <Icon name="Check" className="h-3 w-3 mr-1" />
                                –†–∞–∑–±–∞–Ω
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </ScrollArea>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="plugins">
            <Card className="pixel-corners minecraft-shadow">
              <CardHeader>
                <div className="flex items-center justify-between">
                  <div>
                    <CardTitle className="font-pixel">üß© –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã ({installedPlugins.length})</CardTitle>
                    <CardDescription>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞–º–∏ –∏ —Å–±–æ—Ä–∫–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞</CardDescription>
                  </div>
                  <Button 
                    className="pixel-corners minecraft-shadow"
                    onClick={() => {
                      const input = document.createElement('input');
                      input.type = 'file';
                      input.accept = '.jar,.zip';
                      input.onchange = (e: any) => {
                        const file = e.target.files[0];
                        if (file) {
                          toast.success(`–°–±–æ—Ä–∫–∞ ${file.name} –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...`);
                          setTimeout(() => toast.success('–°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!'), 1500);
                        }
                      };
                      input.click();
                    }}
                  >
                    <Icon name="Upload" className="h-4 w-4 mr-2" />
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–±–æ—Ä–∫—É
                  </Button>
                </div>
              </CardHeader>
              <CardContent>
                <ScrollArea className="h-[500px]">
                  <div className="space-y-3">
                    {installedPlugins.map((plugin, index) => (
                      <Card key={index} className="pixel-corners bg-muted/30">
                        <CardContent className="p-4">
                          <div className="flex items-start justify-between">
                            <div className="flex-1">
                              <div className="flex items-center gap-2 mb-1">
                                <h3 className="font-pixel text-sm">{plugin.name}</h3>
                                <Badge variant="outline" className="text-xs">
                                  v{plugin.version}
                                </Badge>
                                <Badge 
                                  variant={plugin.enabled ? "default" : "secondary"} 
                                  className="text-xs"
                                >
                                  {plugin.enabled ? '–í–∫–ª.' : '–í—ã–∫–ª.'}
                                </Badge>
                              </div>
                              <p className="text-xs text-muted-foreground">
                                {plugin.description}
                              </p>
                            </div>
                            <div className="flex gap-2 ml-4">
                              <Button 
                                size="sm" 
                                variant={plugin.enabled ? "default" : "outline"}
                                className="pixel-corners text-xs"
                                onClick={() => togglePlugin(plugin.name)}
                              >
                                <Icon name={plugin.enabled ? "Power" : "PowerOff"} className="h-3 w-3" />
                              </Button>
                              <Button size="sm" variant="outline" className="pixel-corners text-xs">
                                <Icon name="Settings" className="h-3 w-3" />
                              </Button>
                              <Button size="sm" variant="destructive" className="pixel-corners text-xs">
                                <Icon name="Trash2" className="h-3 w-3" />
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </ScrollArea>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="console">
            <Card className="pixel-corners minecraft-shadow">
              <CardHeader>
                <CardTitle className="font-pixel">üíª –ö–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞</CardTitle>
                <CardDescription>–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤</CardDescription>
              </CardHeader>
              <CardContent>
                <ScrollArea className="h-[400px] bg-black/90 rounded-lg p-4 mb-4 font-mono text-sm">
                  <div className="space-y-1">
                    {consoleLog.map((log, index) => (
                      <div key={index} className="text-green-400">{log}</div>
                    ))}
                  </div>
                </ScrollArea>
                <div className="flex gap-2">
                  <Input
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
                    value={consoleCommand}
                    onChange={(e) => setConsoleCommand(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && executeCommand()}
                    className="pixel-corners font-mono"
                  />
                  <Button 
                    onClick={executeCommand}
                    className="pixel-corners minecraft-shadow"
                  >
                    <Icon name="Send" className="h-4 w-4" />
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {server.plan === '–í–°–Å –∏–ª–∏ –ù–ò–ß–ï–ì–û' && (
            <TabsContent value="custom">
              <div className="grid gap-4">
                <Card className="pixel-corners minecraft-shadow border-4 border-primary">
                  <CardHeader>
                    <div className="flex items-center gap-2">
                      <Icon name="Crown" className="h-6 w-6 text-yellow-500" />
                      <CardTitle className="font-pixel text-2xl">‚≠ê VIP –ö–∞—Å—Ç–æ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</CardTitle>
                    </div>
                    <CardDescription>
                      –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "–í–°–Å –∏–ª–∏ –ù–ò–ß–ï–ì–û"
                    </CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      <Card className="pixel-corners bg-gradient-to-br from-yellow-500/10 to-orange-500/10 border-yellow-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Zap" className="h-4 w-4 text-yellow-500" />
                            –í—ã–¥–µ–ª–µ–Ω–Ω—ã–π IP
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <Input 
                              placeholder="–í–≤–µ–¥–∏ —Å–≤–æ–π IP"
                              className="pixel-corners text-xs"
                            />
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('IP –∞–¥—Ä–µ—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω!')}
                            >
                              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>

                      <Card className="pixel-corners bg-gradient-to-br from-purple-500/10 to-pink-500/10 border-purple-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Shield" className="h-4 w-4 text-purple-500" />
                            –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <Input 
                              placeholder="–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤"
                              className="pixel-corners text-xs"
                            />
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('–ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω!')}
                            >
                              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>

                      <Card className="pixel-corners bg-gradient-to-br from-green-500/10 to-emerald-500/10 border-green-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Database" className="h-4 w-4 text-green-500" />
                            –ê–≤—Ç–æ–±—ç–∫–∞–ø—ã
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <select className="w-full p-2 rounded pixel-corners text-xs bg-background border">
                              <option>–ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç</option>
                              <option>–ö–∞–∂–¥—ã–π —á–∞—Å</option>
                              <option>–ö–∞–∂–¥—ã–µ 3 —á–∞—Å–∞</option>
                              <option>–ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤</option>
                            </select>
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—ç–∫–∞–ø–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!')}
                            >
                              –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>

                      <Card className="pixel-corners bg-gradient-to-br from-blue-500/10 to-cyan-500/10 border-blue-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Cpu" className="h-4 w-4 text-blue-500" />
                            CPU –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <select className="w-full p-2 rounded pixel-corners text-xs bg-background border">
                              <option>90% (–ú–∞–∫—Å–∏–º—É–º)</option>
                              <option>75% (–í—ã—Å–æ–∫–∏–π)</option>
                              <option>50% (–°—Ä–µ–¥–Ω–∏–π)</option>
                            </select>
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç CPU –∏–∑–º–µ–Ω–µ–Ω!')}
                            >
                              –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>

                      <Card className="pixel-corners bg-gradient-to-br from-red-500/10 to-rose-500/10 border-red-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Flame" className="h-4 w-4 text-red-500" />
                            DDoS –∑–∞—â–∏—Ç–∞ Pro
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <select className="w-full p-2 rounded pixel-corners text-xs bg-background border">
                              <option>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è</option>
                              <option>–í—ã—Å–æ–∫–∞—è</option>
                              <option>–°—Ä–µ–¥–Ω—è—è</option>
                            </select>
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('–£—Ä–æ–≤–µ–Ω—å –∑–∞—â–∏—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')}
                            >
                              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>

                      <Card className="pixel-corners bg-gradient-to-br from-indigo-500/10 to-violet-500/10 border-indigo-500/50">
                        <CardHeader>
                          <CardTitle className="text-sm font-pixel flex items-center gap-2">
                            <Icon name="Globe" className="h-4 w-4 text-indigo-500" />
                            –°–≤–æ–π –¥–æ–º–µ–Ω
                          </CardTitle>
                        </CardHeader>
                        <CardContent>
                          <div className="space-y-2">
                            <Input 
                              placeholder="mc.yourdomain.ru"
                              className="pixel-corners text-xs"
                            />
                            <Button 
                              size="sm" 
                              className="w-full pixel-corners text-xs"
                              onClick={() => toast.success('–î–æ–º–µ–Ω –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É!')}
                            >
                              –ü—Ä–∏–≤—è–∑–∞—Ç—å
                            </Button>
                          </div>
                        </CardContent>
                      </Card>
                    </div>
                  </CardContent>
                </Card>

                <Card className="pixel-corners minecraft-shadow border-2 border-yellow-500/50">
                  <CardHeader>
                    <CardTitle className="font-pixel flex items-center gap-2">
                      <Icon name="Settings" className="h-5 w-5" />
                      üéÆ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <label className="text-sm font-medium mb-2 block">–ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤</label>
                        <Input 
                          type="number" 
                          defaultValue="999"
                          className="pixel-corners"
                          onChange={(e) => toast.success(`–õ–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤: ${e.target.value}`)}
                        />
                      </div>
                      <div>
                        <label className="text-sm font-medium mb-2 block">–°–ª–æ–∂–Ω–æ—Å—Ç—å</label>
                        <select className="w-full p-2 rounded pixel-corners bg-background border">
                          <option>–ú–∏—Ä–Ω–∞—è</option>
                          <option>–õ–µ–≥–∫–∞—è</option>
                          <option>–ù–æ—Ä–º–∞–ª—å–Ω–∞—è</option>
                          <option>–°–ª–æ–∂–Ω–∞—è</option>
                        </select>
                      </div>
                      <div>
                        <label className="text-sm font-medium mb-2 block">–ò–≥—Ä–æ–≤–æ–π —Ä–µ–∂–∏–º</label>
                        <select className="w-full p-2 rounded pixel-corners bg-background border">
                          <option>–í—ã–∂–∏–≤–∞–Ω–∏–µ</option>
                          <option>–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ</option>
                          <option>–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è</option>
                          <option>–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å</option>
                        </select>
                      </div>
                      <div>
                        <label className="text-sm font-medium mb-2 block">PvP —Ä–µ–∂–∏–º</label>
                        <select className="w-full p-2 rounded pixel-corners bg-background border">
                          <option>–í–∫–ª—é—á–µ–Ω</option>
                          <option>–í—ã–∫–ª—é—á–µ–Ω</option>
                        </select>
                      </div>
                    </div>
                    <Button 
                      className="w-full mt-4 pixel-corners minecraft-shadow"
                      onClick={() => toast.success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')}
                    >
                      üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </Button>
                  </CardContent>
                </Card>

                <Card className="pixel-corners minecraft-shadow">
                  <CardHeader>
                    <CardTitle className="font-pixel flex items-center gap-2">
                      <Icon name="Phone" className="h-5 w-5" />
                      üìû VIP –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <p className="text-sm text-muted-foreground">
                        –ö–∞–∫ VIP –∫–ª–∏–µ–Ω—Ç, —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç!
                      </p>
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                        <Button variant="outline" className="pixel-corners">
                          <Icon name="MessageCircle" className="h-4 w-4 mr-2" />
                          Telegram
                        </Button>
                        <Button variant="outline" className="pixel-corners">
                          <Icon name="Phone" className="h-4 w-4 mr-2" />
                          –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                        </Button>
                        <Button variant="outline" className="pixel-corners">
                          <Icon name="Mail" className="h-4 w-4 mr-2" />
                          Email
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
          )}
        </Tabs>
      </div>
    </div>
  );
};

export default ServerControl;